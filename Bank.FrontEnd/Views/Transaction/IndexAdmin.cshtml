@model IEnumerable<Bank.DAL.Models.Transaction>

@{ ViewData["Title"] = "IndexAdmin"; }
@if (User.Identity.IsAuthenticated)
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>

    <form method="get" asp-action="IndexAdmin">
        <p>
            <input type="search" placeholder="een overzicht geven van alleen de positieve/negative transacties ( van X sec.)" value="@ViewData["Getaccountdetails"]" name="search" style="width:500px;" />
            <input type="submit" value="Search" class="btn btn-primary" />
            <a asp-action="IndexAdmin">Get All</a>
        </p>

    </form>

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.TransactionAmount)
                </th>
                <th>
                    <a asp-action="IndexAdmin" asp-route-sortOrder="@ViewData["AccountFromSort"]">@Html.DisplayNameFor(model => model.AccountFrom)</a>
                </th>
                <th>
                    <a asp-action="IndexAdmin" asp-route-sortOrder="@ViewData["AccountToSort"]">@Html.DisplayNameFor(model => model.AccountTo)</a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreationDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TransactionDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsPeriodic)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PeriodicTransactionFrequentyDays)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Frequenty)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NextPayment)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.TransactionAmount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccountFrom)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccountTo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreationDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TransactionDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsPeriodic)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PeriodicTransactionFrequentyDays)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Frequenty)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NextPayment)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@if (!User.Identity.IsAuthenticated)
{
    <h2>U dient in te loggen om een transactie te kunnen maken. </h2>
    <br />
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>}
